@page "/{blogSlug}"
@using blog.Shared
@using System.Net
@inject HttpClient Http
@inject MarkdownPipeline Mkdn

@if (post == null)
{
    <p>No blog post found.</p>
}
else
{
    <Title Value=@post.Title />
    <div class="banner" style="background-image: url(@post.TitleImage.Url)"></div>
    <div class="container blog-container">
        <h1 class="title-text text-center">@post.Title</h1>
        <div>
            <p class="published-date text-center">@post.Sys.FirstPublishedAt.ToLongDateString()</p>
            <div class="tags-list">
                @foreach (var tag in post.Tags)
                {
                    <button class="tag btn" type="button">@tag</button>
                }
            </div>
            @PostContent
        </div>
    </div>
}

@code {
    private Blog? post { get; set; }

    [Parameter]
    public string BlogSlug { get; set; }
    
    private string RenderHtmlContent(string value) => Markdown.ToHtml(value, Mkdn);
    
    private MarkupString PostContent => (MarkupString)RenderHtmlContent(post.Content);

    protected override async Task OnInitializedAsync() 
    {
        var response = await Http.GetAsync($"/BlogPosts/{BlogSlug}");

        if (response.StatusCode == HttpStatusCode.OK)
        {
            post = await response.Content.ReadFromJsonAsync<Blog>();
        }
    }
}